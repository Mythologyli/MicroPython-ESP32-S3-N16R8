name: Build MicroPython

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout MicroPython
        uses: actions/checkout@v3
        with:
          repository: micropython/micropython
          path: micropython

      - name: Checkout MicroPython ESP32-S3 N16R8
        uses: actions/checkout@v3
        with:
          path: MicroPython-ESP32-S3-N16R8

      - name: Install esp-idf
        run: |
          sudo apt update
          sudo apt install -y git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util
          mkdir ~/esp
          cd ~/esp
          wget https://dl.espressif.com/github_assets/espressif/esp-idf/releases/download/v4.4.2/esp-idf-v4.4.2.zip
          unzip -q esp-idf-v4.4.2.zip && mv esp-idf-v4.4.2 esp-idf
          rm -f esp-idf-v4.4.2.zip
          cd ~/esp/esp-idf
          ./install.sh esp32s3

      - name: Copy GENERIC_S3_N16R8 to micropython/ports/esp32/boards
        run: cp -r MicroPython-ESP32-S3-N16R8/GENERIC_S3_N16R8 micropython/ports/esp32/boards

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential pkg-config

      - name: Build
        run: |
          cd micropython/ports/esp32
          make submodules
          source ~/esp/esp-idf/export.sh
          export IDF_TARGET=esp32s3
          make BOARD=GENERIC_S3_N16R8

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: |
            micropython/ports/esp32/build-GENERIC_S3_N16R8/firmware.bin
            micropython/ports/esp32/build-GENERIC_S3_N16R8/bootloader
            micropython/ports/esp32/build-GENERIC_S3_N16R8/partition_table
            micropython/ports/esp32/build-GENERIC_S3_N16R8/*flash*
            micropython/ports/esp32/build-GENERIC_S3_N16R8/micropython*
